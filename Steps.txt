Phase 1: Project Setup
    Create Django Project and Core App
        We start by creating the main Django project (kioko_enterprises) and a reusable app (core) that will house shared logic like templates, base views, and utility functions.
            kioko_enterprises/ contains project settings and URLs
            core/ will serve as the foundational app for shared components
    Install Required Packages
        Install the core dependencies needed for this project:
            djangorestframework: for building RESTful APIs
            django-allauth: for email/password and Google login
            django-bootstrap5: for responsive UI components
            python-decouple: for managing environment variables securely
            psycopg2-binary: PostgreSQL adapter for Django
    Configure Environment Variables
        Create a .env file to store sensitive configuration values like database credentials and secret keys. This keeps secrets out of version control and supports reproducibility across environments.
    Update settings.py
        Modify Django settings to:
            Load environment variables using python-decouple
            Configure PostgreSQL as the database
            Register installed apps including DRF, Allauth, and Bootstrap
            Set up authentication backends for social login
    Configure Static and Media Files
        Set up paths for static assets (CSS, JS) and media files (product images, user uploads). This ensures proper handling during development and deployment.
    Create Base Template
        Create a reusable base HTML template using Bootstrap 5. This will serve as the layout foundation for all pages (homepage, product listings, cart, etc.).

Phase 2: User Management System
    Create Custom User Model
        We’ll extend Django’s AbstractUser to include:
            Email as the unique identifier
            Role field (Admin, Staff, Customer)
            Date of birth for age verification
            Profile picture upload
    Update Settings for Custom User
        "AUTH_USER_MODEL = 'core.User'"
    Create User Registration Form
        We’ll build a custom form that includes:
            Email
            Password
            Date of birth
            Role (default: customer)
    Create Registration View
    Create Registration Template
    Configure Allauth for Google Login
        Enable Google login via Django Allauth.
        Add Google Provider
            In Django Admin:
                Add a Social App for Google
                Provide Client ID and Secret
                Associate with Site ID 1
    Password Reset via Email
        Use Django’s built-in password reset views.
    Profile Management
        Allow users to view and update:
            Personal info
            Shipping address
            Order history (placeholder for now)